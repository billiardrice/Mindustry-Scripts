# 11/23/2021
# v6.0
# 
# Snake Game

# Variables
set scale 11
set screenSize 176
set tailLen 2
# op div snakeX screenSize 2
# op div snakeY screenSize 2


jump _main equal 1 1










# Functions

# Delay Function
# To call do
# 
# set delay [time to wait for]
# op add retAddr @counter 1
# jump _delayFuction equal 1 1
_delayFuction:
set start @time
op add end start delay
_delayLoop:
jump _delayLoop lessThan @time end
set @counter retAddr










# Display To Screen
#
# op add retAddr @counter 1
# jump _display equal 1 1
_display:
drawflush display1
set @counter retAddr











# Move Snake
#
# op add retAddr @counter 1
# jump _move equal 1 1
_move:
op add snakeX snakeX moveY
op add snakeY snakeY moveX

#set tail 0
#_moveTailLoop:
#set tailX snakeX
#set tailY snakeY
#op mul modx tail 3
#op add mody modx 1
#read modx cell1 modx
#read mody cell1 mody
#op add tailX tailX modx
#op add tailY tailY mody
#draw rect tailX tailY scale scale 0 0
#op add tail tail 1
#jump _moveTailLoop lessThanEq tail tailLen

jump _moveXUPDone lessThan snakeX screenSize
set snakeX 0
_moveXUPDone:
jump _moveYUPDone lessThan snakeY screenSize
set snakeY 0
_moveYUPDone:
jump _moveXDOWNDone lessThan -11 snakeX
set snakeX 165
_moveXDOWNDone:
jump _moveYDOWNDone lessThan -11 snakeY
set snakeY 165
_moveYDOWNDone:
draw rect snakeX snakeY scale scale 0 0
set @counter retAddr










# Get Player Position
#
# op add retAddr @counter 1
# jump _getPlayerPos equal 1 1
_getPlayerPos:
getlink firstLink 0
radar player any any distance firstLink 1 player

sensor x player @x
op sub x x @thisx
op pow absx x 2

sensor y player @y
op sub y y @thisy
op pow absy y 2

jump _gPPLogicStart lessThan 4 absx
jump _gPPLogicStart lessThan 4 absy
set moveX 0
set moveY 0
jump _gPPDone equal 0 0

_gPPLogicStart:
jump _gPPyLess lessThan absy absx


jump _gPPxNeg lessThan y 0
set moveX 11
set moveY 0
jump _gPPDone equal 1 1

_gPPxNeg:
set moveX -11
set moveY 0
jump _gPPDone equal 1 1


_gPPyLess:

jump _gPPyNeg lessThan x 0
set moveX 0
set moveY 11
jump _gPPDone equal 1 1

_gPPyNeg:
set moveX 0
set moveY -11
jump _gPPDone equal 1 1

_gPPDone:

set @counter retAddr










# Main loop
_main:
draw clear 0 0 0 0 0 0

op add retAddr @counter 1
jump _getPlayerPos equal 1 1

op add retAddr @counter 1
jump _move equal 1 1

op add retAddr @counter 1
jump _display equal 1 1

set delay 500
op add retAddr @counter 1
jump _delayFuction equal 1 1





# memory stuff
#set snakeLen 4
#set snakeX 88
#set snakeY 88
#draw rect headX headY 11 11 0 0
#set tail 2
#set tailX snakeX
#set tailY snakeY
#op mul modx tail 2
#op add mody modx 1
#read modx cell1 modx
#read mody cell1 mody
#op add tailX tailX modx
#op add tailY tailY mody
#draw rect tailX tailY 11 11 0 0
#op add tail tail 1
#jump 7 lessThanEq tail snakeLen
#draw clear 0 0 0 0 0 0
#drawflush display1
